************************************************************************************************************************;
**Table 1 decedent demographics 
**ES December 11, 2023;
************************************************************************************************************************; 

ods excel file="mydirectory/Table1.xlsx";
	
*file directory;
libname savepath "mydirectory/Data/";
ods escapechar="^";
	
proc format;
	value $genderf 'F'= 'Female' 
	'M' = 'Male';
	value $deathf 'arx_o' = 'Opioid precription only'
	'billi' = 'Heroin only'
	"cilli" = "Opioid prescription and heroin"
	"other" = "Other/missing";
	value $agef 'age' = 'Age';
	value $racef 'Hispanic' = 'Hispanic'
	'White' = 'White'
	'Other' = 'Other/missing';
	value $characteristicf 
	'F'= 'Female' 
	'M' = 'Male'
	'arx_o' = 'Opioid prescription only'
	'billi' = 'Heroin only'
	"cilli" = "Opioid prescription and heroin"
	"other" = "Other/missing"
	'Hispanic' = 'Hispanic'
	'White' = 'White'
	'Other' = 'Other/missing';
run;

*import data. Each demographic variable is on different xlsx sheet.;
%macro imp(name);
	proc import datafile = "mydirectory/Table1.xlsx"
		dbms = xlsx
		out = &name;
		sheet = "&name";
	run;

data &name;
	length Characteristic $ 60.;
	set &name;
	%if &name = age %then %do;
	  drop MEAN STD N Letter Characteristic;
  %end;
  
  %if &name = race %then %do;
  	if ethnicity = "Hispanic/LA" then race = "Hispanic";
  	else if race = "Caucasian" then race = "White";
  	else race =  "Other";
  %end;
  
  %if &name = death %then %do;
  	if characteristic not in ('arx_only' 'billicit_only' 'cillicit_rx') then death = "other";
  	else death = characteristic;
  %end;
  
  %if &name = gender %then %do;
  	if characteristic = "Miss" then gender = 'M';
  	else gender = characteristic;
 %end;
run
%mend imp;
%imp(age);
%imp(gender);
%imp(death);
%imp(race);

*chi-square tests for sex, cause of death, and race;
%macro chi(data, var, value);
	proc freq data = &data noprint;
		table &var*letter/out = &var._freq missing chisq oddsratio;
		weight ct;
		title "&data by letter";
		output out = &var._chi chisq;
	run;
	
	options validvarname=any;
	data &var._chi;
		length characteristic $ 60.;
		set &var._chi;
		CHI = '^{unicode chi}^{super 2}';
		Statistic = cat(chi, ' = ', round(_PCHI_,0.01));
		'Two-sided P value'n = round(P_PCHI, .001);
		characteristic = &value;
		keep characteristic Statistic 'Two-sided P Value'n;
		format 'Two-sided P value'n 8.3;
	run;
%mend chi;
%chi(death, death, 'other');
%chi(gender, gender, 'M');
%chi(race, race, 'White');

*difference in mean age;
proc ttest data = age test = diff sides = 2;
	class Letter_1;
	var Age;
	title "T-test age by letter";
	ods output Ttests = tt;
run;

data tt;
	length characteristic $ 60.;
	retain characteristic Statistic 'Two-sided P value'n;
	set tt;
	'Two-sided P value'n = round(Probt, .001);
	Statistic = cat('t = ', round(tvalue, .01));
  characteristic = catx(' ', variable, (BYTE(177)), '^{unicode 03C3}');
	where variances = "Unequal";
	keep characteristic Statistic 'Two-sided P value'n;
	format 'Two-sided P value'n 8.3;
run;

*reformat age;
proc transpose data = age out = age_trans;
	id letter_1 _STAT_;
	where _STAT_ ne 'N';
run;

data age_trans;
	retain Characteristic Comparator Standard;
	set age_trans;
	cmean = round(cmean,.01);
	emean = round(emean,.01);
	cstd = round(cstd,.01);
	estd = round(estd,.01);
	Standard = cat(cmean, ' (', cstd, ')');
	Comparator = cat(emean, ' (', estd, ')');
	Characteristic = catx(' ', _LABEL_, (BYTE(177)), '^{unicode 03C3}');
	keep Characteristic Comparator Standard;
run;

*merge age counts and t-value;
proc sort data = tt;
	by characteristic;
run;

proc sort data = age_trans;
	by characteristic;
run;

data age_counts;
	merge tt age_trans;
	by characteristic;
run;

*transpose data to append for table;
%macro trans(dat, title);
proc sql;
	create table &dat as 
	select sum(ct) as ct, &dat as characteristic, letter
	from &dat 
	group by &dat, letter;
quit;

*transpose counts;
proc sort data = &dat;
	by characteristic;
run;

*transpose data to wide;
proc transpose data = &dat out = &dat._trans (drop =  _NAME_);
	id letter;
	by characteristic;
run;

*get totals for each group;
proc sql;
	create table &dat._temp as
	select Characteristic, 
	/*percentage*/
	catx(' ', E, (cat('(', round((E/sum(E)), .0001)*100, '%', ')'))) as Comparator, 
	catx(' ', C, (cat('(', round((C/sum(C)), .0001)*100, '%', ')'))) as Standard from &dat._trans;
quit;

data &dat._temp;
	length characteristic $ 20.;
	set &dat._temp;
run;

proc sql;
	create table &dat._title as 
	select distinct &title as Characteristic, '' as Comparator, '' as Standard from &dat._temp;
quit;

proc sort data = &dat._temp;
	by characteristic;
run;

proc sort data = &dat._chi;
	by characteristic;
run;

data &dat._counts;
	merge &dat._temp &dat._chi;
	by characteristic;
run;
%mend trans;
%trans(death, "Cause of death");
%trans(gender, "Gender");
%trans(race, "Race");

*merge stats. with counts;
data total;
	retain Characteristic Comparator Standard Statistic 'Two-sided P value'n;
	set age_counts gender_title gender_counts race_title race_counts death_title death_counts;
	format Characteristic $characteristicf.;
run;

proc print data = total;
run;
ods excel close;



