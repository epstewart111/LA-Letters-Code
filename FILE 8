############################################################################################################################
#FILE GOALS                                                                                                                #
#####1. GRAPH MME AND DME DISTRIBUTION AND ADD LEGEND (REVISE AND RESUMBIT)                                                #
*ES DECEMBER 15, 2023                                                                                                      #
############################################################################################################################

#load libraries
library(rvg)
library(officer)
library(tidyverse)
library(dplyr)
library(sqldf)
library(ggplot2)
library(cowplot)
library(haven)

#function inputs for MME or DME (see bottom of file)
graph <- function(dat, no1, no2, no3, no4, count, outcome, out) {
 
#import data
mydat <- read_csv(paste0("/mydirectory/", dat, ""))

#group variable by intervention and decedent group
mydat$group <- case_when(mydat$decid_cat == 0 & mydat$is_let == 0  ~ paste0("Stand./One Dec.\n n = ", no1, ""),
mydat$decid_cat == 1 & mydat$is_let == 0 ~ paste0("Stand./> One Dec.\n n = ", no2, ""),
mydat$decid_cat == 0 & mydat$is_let == 1 ~ paste0("Let./One Dec.\n n = ", no3, ""),
mydat$decid_cat == 1 & mydat$is_let == 1 ~ paste0("Let./> One Dec.\n n = ", no4, "")
)

#change period to factor
mydat$period <- as.factor(mydat$post)

#change style, font, size, etc.
theme_USGS_box <- function(base_family = "serif", ...){
theme_bw(base_family = base_family, ...) +
theme(
panel.grid = element_blank(),
plot.title = element_text(size = 7),
axis.ticks.length = unit(-0.05, "in"),
axis.text.x = element_text(margin=unit(c(0.3,0.3,0.3,0.3), "cm")),
axis.ticks.x = element_blank(),
aspect.ratio = 1,
legend.background = element_rect(color = "black", fill = "white")
)
}

update_geom_defaults("text", list(size = 5, family = "serif"))

#function to add boxplot legend
#Code and annotation for legend: Exploring ggplot2 boxplots - Defining limits and adjusting style. https://waterdata.usgs.gov/blog/boxplots/ (2018). 
ggplot_box_legend <- function(family = "serif"){
 
# Create data to use in the boxplot legend:
set.seed(100)
 
sample_df <- data.frame(parameter = "test", values = sample(500))
 
# Extend the top whisker a bit:
sample_df$values[1:100] <- 701:800
# Make sure there's only 1 lower outlier:
sample_df$values[1] <- -350
 
# Function to calculate important values:
ggplot2_boxplot <- function(x){
   
quartiles <- as.numeric(quantile(x, probs = c(0.25, 0.5, 0.75)))
   
names(quartiles) <- c("25th percentile",
"50th percentile\n(median)",
"75th percentile")
   
IQR <- diff(quartiles[c(1,3)])
   
upper_whisker <- max(x[x < (quartiles[3] + 1.5 * IQR)])
lower_whisker <- min(x[x > (quartiles[1] - 1.5 * IQR)])
   
upper_dots <- x[x > (quartiles[3] + 1.5*IQR)]
lower_dots <- x[x < (quartiles[1] - 1.5*IQR)]
   
return(list("quartiles" = quartiles,
"25th percentile" = as.numeric(quartiles[1]),
"50th percentile\n(median)" = as.numeric(quartiles[2]),
"75th percentile" = as.numeric(quartiles[3]),
"IQR" = IQR,
"upper_whisker" = upper_whisker,
"lower_whisker" = lower_whisker,
"upper_dots" = upper_dots,
"lower_dots" = lower_dots))
}
 
# Get those values:
ggplot_output <- ggplot2_boxplot(sample_df$values)
ggplot_output
 
# Lots of text in the legend, make it smaller and consistent font:
update_geom_defaults("text",
list(size = 3, hjust = 0, family = family))

# Labels don't inherit text:
update_geom_defaults("label", list(size = 3, hjust = 0, family = family))
 
# Create the legend:
# The main elements of the plot (the boxplot, error bars, and count)
# are the easy part.
# The text describing each of those takes a lot of fiddling to
# get the location and style just right:
explain_plot <- ggplot() +
stat_boxplot(data = sample_df,
aes(x = parameter, y=values),
geom ='errorbar', width = 0) +
geom_boxplot(data = sample_df,
aes(x = parameter, y=values),
width = 0.3, fill = "lightgrey") +
geom_text(aes(x = 1, y = 950, label = count), hjust = 0.5) +
geom_text(aes(x = 1.17, y = 950,
label = "Number of values"),
fontface = "bold", vjust = 0.4) +
theme_minimal(base_size = 5, base_family = family) +
geom_segment(aes(x = 2.3, xend = 2.3,
y = ggplot_output[["25th percentile"]],
yend = ggplot_output[["75th percentile"]])) +
geom_segment(aes(x = 1.2, xend = 2.3,
y = ggplot_output[["25th percentile"]],
yend = ggplot_output[["25th percentile"]])) +
geom_segment(aes(x = 1.2, xend = 2.3,
y = ggplot_output[["75th percentile"]],
yend = ggplot_output[["75th percentile"]])) +
geom_text(aes(x = 2.4, y = ggplot_output[["50th percentile\n(median)"]]),
label = "Interquartile\nrange", fontface = "bold",
vjust = 0.4) +
geom_text(aes(x = c(1.17,1.17),
y = c(ggplot_output[["upper_whisker"]],
ggplot_output[["lower_whisker"]]),
label = c("Largest value within 1.5 times\ninterquartile range above\n75th percentile",
"Smallest value within 1.5 times\ninterquartile range below\n25th percentile")),
fontface = "bold", vjust = 0.9) +
geom_text(aes(x = c(1.17),
y =  ggplot_output[["lower_dots"]],
label = "Outside value"),
vjust = 0.5, fontface = "bold") +
geom_text(aes(x = c(1.17),
y =  ggplot_output[["lower_dots"]],
label = "Value is >1.5 times and <3 times\nthe interquartile range beyond\neither end of the box"),
vjust = 1.3) +
geom_label(aes(x = 1.17, y = ggplot_output[["quartiles"]],
label = names(ggplot_output[["quartiles"]])),
vjust = c(0.4,0.5,0.4),
fill = "white", label.size = 0) +
ylab("") + xlab("") +
theme(axis.text = element_blank(),
axis.ticks = element_blank(),
panel.grid = element_blank(),
aspect.ratio = 4/3,
plot.title = element_text(hjust = 0, vjust = 6, size = 10)) +
coord_cartesian(xlim = c(1.4,3.1), ylim = c(-600, 900)) +
labs(title = paste0(outcome, " by letter type and number of decedents")
 
return(explain_plot)
}

#legend
legend_plot <- ggplot_box_legend()
legend_plot

#graph
myg <- ggplot(data = mydat, aes(x = group, y = log_total, fill = period)) +
geom_boxplot() +
ylab(paste0("Total Log ", outcome, "")) +
xlab("") +
theme_USGS_box() +
scale_fill_discrete(name = "Period", labels=c("Pre-intervention", "Post-intervention")) +
theme(legend.position = c(0.15, 1.2)) +
theme(legend.position = ("bottom"))

#plot graph and legend
p <- plot_grid(myg, legend_plot, nrow = 1, rel_widths = c(.6,.4))

#export to editable ppt
p_dml <- rvg::dml(ggobj = p)
p_dml

doc <- read_pptx()
#new slide
doc <- add_slide(doc, layout = "Title and Content", master = "Office Theme")

#add graph
doc <- ph_with(x = doc, p_dml, location = ph_location_type(type = "body"))

#save
print(doc, target = paste0("/mydirectory/", out, ""))
}

#run function
#MME
graph(box_data_mme.csv, 244, 25, 225, 16, 1020, MME, boxplot_mme.pptx)

#DME
graph(box_data_vme.csv, 252, 25, 235, 16, 1056, DME, boxplot_dme.pptx)




