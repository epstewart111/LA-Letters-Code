/***************************************************************************************************************************
*FILE GOALS                                                                                                                *
*****1. COUNTS AND CHI-SQUARES FOR TABLE 2 PRESCRIBER DEMOGRAPHICS                                                         *
*ES DECEMBER 12, 2023                                                                                                           *
****************************************************************************************************************************/

*libname;
libname table "/mydirectory/Data";
	
*filepath to output;
ods excel file="/mydirectory/table2.xlsx";
ods escapechar="^";
%LET PLUSMIN=%SYSFUNC(BYTE(177)) ;

*format values;
proc format;
	value $characteristicf 'F'= 'Female' 
	'Am' = 'Male'
	'Zmiss' = 'Missing'
	'AMD' = 'Medical Doctor (MD)'
	'BDO' = 'Doctor of osteopathy (DO)'
	'NP' = 'Nursing (NP/FNP/DNP)'
	'PA' = 'Physician assistant (PA)'
	'Other' = 'Other'
	'EM' = "Emergency medicine"
	'DIM' = 'Internal medicine'
	'Psych' = 'Psychiatry'
	'QFM'  = 'Family medicine'
	'Rother' = 'Other'
	'Smiss' = 'Missing'
	'Asian' = 'Asian/Pacific Islander'
	'Bwhite' = 'Non-Hispanic White'
	'Cother' = 'Other'
	'Declined' = 'Declined to disclose'
	'miss' = 'Missing'
	'LA' = 'Los Angeles City'
	'LB' = 'Long Beach or Pasadena City'
	'ONE' = '1'
	'GT' = '>1'
	'decno' = "No. of decedents "&PLUSMIN" ^{unicode 03C3}";
run;

*import data;
proc import out = temp
datafile = "/mydirectory/la_letters_prescriber_demos.xlsx"
dbms = xlsx;
getnames = yes;
run;

*categorize demos;
data temp2;
length letter $32. ethn $60. spec $60. pres_type $60. gender_v2 $60.;
set temp;

*gender;
if gender = '' then gender_v2 = 'Zmiss';
else if gender = 'M' then gender_v2 = 'Am';
else gender_v2 = gender;

*race/ethnicity;
if Cultural_Background = '' then ethn = 'miss';
else if Cultural_Background in ('Chinese' 'Chinese; Taiwanese' 'Filipino' 'Filipino; Other Hispanic' 'Indian' 'Pakistani' 'Korean' 'Other Asian' 
'Vietnamese' 'Vietnamese; Other Asian' 'Thai' 'Taiwanese') then ethn = 'Asian';
else if Cultural_Background in ('European' 'White' 'White; Middle Eastern' 'Middle Eastern' 'Middle Eastern; Other Hispanic')
then ethn = 'Bwhite';
else if Cultural_Background = 'Declined' then ethn = 'Declined';
else ethn = 'Cother';

*prescriber speciality;
if Primary_Specialty = '' then spec = 'Smiss';
else if Primary_Specialty in ('Emergency' 'Emergency Medicine') then spec = 'EM';
else if Primary_Specialty in ('Family' 'Family Medicine') then spec = 'QFM';
else if Primary_Specialty in ('Internal' 'Internal Medicine') then spec = 'DIM';
else if Primary_Specialty = 'Psychiatry' then spec = 'Psych';
else spec = 'Rother';

*prescriber type;
if type in ('DNP' 'FNP' 'NP' 'RNNP') then pres_type = 'NP';
else if type = 'MD' then pres_type = 'AMD';
else if type = 'PA' then pres_type = 'PA';
else if type = 'DO' then pres_type = 'BDO';
else pres_type = 'Other';

*voided;
where Prescriber_ID ne 'P019' and Prescriber_ID ne 'P476';
run;

proc freq data = temp2;
	table gender_v2;
run;

*county data (from ME's computer);
data county;
length letter $32. county $60.;
input letter $ no county $;
cards;
E 17 LB
C 25 LB
E 240 LA
C 259 LA
;
run;

*no. of decedents;
proc sql;
	create table decno as
	select distinct presid, newclusterid, is_let from table.study_all;
quit;

data decno;
	length decid_cat $60. letter $32.;
	set decno;
	by presid;
	if first.presid then dec_ct = 1;
	else dec_ct+1;
	if dec_ct > 1 then decid_cat = 'GT';
	else decid_cat = 'ONE';
	if is_let = 0 then letter = 'C';
	else letter = 'E';
	if last.presid then output;
run;

*chi-square tests for all other characteristics that contain missing;
%macro chi(dat, v, value);
proc freq data = &dat;
table letter*&v/missing chisq out = &v._freq;
%if &dat = county %then %do;
weight no;
%end;
title "Chi-square prescriber &v by letter";
output out = &v._chi chisq;
format &v;
run;

options validvarname=any;
data &v._chi;
length characteristic $60.;
set &v._chi;
CHI = '^{unicode chi}^{super 2}';
Statistic = cat(chi, ' = ', round(_PCHI_,0.01));
'Two-sided P value'n = round(P_PCHI, .001);
characteristic = &value;
keep characteristic Statistic 'Two-sided P Value'n;
format 'Two-sided P value'n 8.3;
run;

%mend chi;
%chi(temp2, pres_type, 'NP');
%chi(temp2, spec, 'QFM');
%chi(temp2, gender_v2, 'Declined');
%chi(temp2, ethn,'Cother');
%chi(county, county, 'LB');
%chi(decno, decid_cat, 'ONE');

*mean no. of decedents;
proc ttest data = decno test = diff sides = 2;
	class Letter;
	var dec_ct;
	title "T-test decid_cat by letter";
	ods output Ttests = tt Statistics = stats (keep = class mean StdDev where = (class in ('E' 'C')));
run;

data tt;
	retain characteristic Statistic 'Two-sided P value'n;
	length characteristic $60.;
	set tt;
	'Two-sided P value'n = round(Probt, .001);
	Statistic = cat('t = ', round(tvalue, .01));
  characteristic = "decno";
	where variances = "Unequal";
	keep characteristic Statistic 'Two-sided P value'n;
	format 'Two-sided P value'n 8.3;
run;

data stats;
	set stats;
	mean = round(mean,.01);
	std = round(StdDev,.01);
	combined = cat(mean, ' (', std, ')');
	keep class combined;
run;

*sd by letter;
proc transpose data = stats out = trans;
var _all_;
run;

data trans;
	length characteristic $60.;
	set trans (rename = (COL1 = E COL2 = C));
	if _name_ = 'combined';
	characteristic = 'decno';
	keep characteristic E C;
run;

proc sql;
	create table decct as
	select t.characteristic, t.E as Comparator,
	t.C as Standard, l.Statistic, l.'Two-sided P value'n from trans t 
	join 
	tt l 
	on t.characteristic = l.characteristic;
quit;

proc print data = decct;
run;

*transpose data to append for table;
%macro trans(dat, var, title);

*characteristic counts;
proc sql;
	create table &var as 
	
	%if &dat ne county %then %do;
	select count(*) as ct, &var as characteristic, letter
	from &dat
	group by &var, letter;
  %end;
  
  %else %do;
  select sum(no) as ct, &var as characteristic, letter
  from &dat 
  group by &var, letter;
  %end;
quit;

*transpose counts;
proc sort data = &var;
	by characteristic;
run;

*transpose data to wide;
proc transpose data = &var out = &var._trans (drop =  _NAME_);
	id letter;
	by characteristic;
run;

*get totals for each group;
proc sql;
	create table &var._temp as
	select Characteristic, 
	/*percentage*/
	catx(' ', E, (cat('(', round((E/sum(E)), .0001)*100, '%', ')'))) as Comparator, 
	catx(' ', C, (cat('(', round((C/sum(C)), .0001)*100, '%', ')'))) as Standard from &var._trans;
quit;

data &var._temp;
	length characteristic $ 20.;
	set &var._temp;
run;

proc sql;
	create table &var._title as 
	select distinct &title as Characteristic, '' as Comparator, '' as Standard from &var._temp;
quit;

data &var._title;
	length characteristic $80.;
	set &var._title;
run;

proc sort data = &var._temp;
	by characteristic;
run;

proc sort data = &var._chi;
	by characteristic;
run;

data &var._counts;
	length comparator $60. standard $60.;
	merge &var._temp &var._chi;
	by characteristic;
run;
%mend trans;
%trans(temp2, pres_type, "Professional practice");
%trans(temp2, gender_v2, "Gender");
%trans(temp2, ethn, "Race/Ethnicity");
%trans(temp2, spec, "Primary speciality");
%trans(county, county, "County");
%trans(decno, decid_cat, "No. of decedents");

*merge stats. with counts;
data total;
	retain Characteristic Comparator Standard Statistic 'Two-sided P value'n;
	length Comparator $60. Standard $60.;
	set gender_v2_title gender_v2_counts pres_type_title pres_type_counts spec_title spec_counts
	ethn_title ethn_counts county_title county_counts decid_cat_title decid_cat_counts decct;
	format Characteristic $characteristicf.;
run;

proc print data = total;
run;
ods excel close;

